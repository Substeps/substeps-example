<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<!-- This is a sample pom configuration for building a suite of substep 
		acceptance tests based on the webdriver step implementations -->

	<!-- Change these values to something appropriate for your organisation 
		and project -->
	<groupId>org.substeps</groupId>
	<artifactId>webdriver-substeps-example</artifactId>
	<version>1.0.0</version>

	<packaging>jar</packaging>
	<name>Webdriver Substeps Example</name>
	<description>An example webdriver substeps project</description>

	<licenses>
		<license>
			<name>LGPL 3.0 license</name>
			<url>http://www.opensource.org/licenses/lgpl-3.0.html</url>
			<distribution>manual</distribution>
		</license>
	</licenses>


	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<selenium.version>3.0.0-beta4</selenium.version>

		<hamcrest.version>1.3.RC2</hamcrest.version>
		<junit.version>4.10</junit.version>

		<substeps.framework.version>1.0.4-SNAPSHOT</substeps.framework.version>

		<webdriver.substeps.version>1.0.3-SNAPSHOT</webdriver.substeps.version>

		<slf4j.version>1.7.13</slf4j.version>

	</properties>

	<dependencies>

		<dependency>
			<groupId>com.typesafe</groupId>
			<artifactId>config</artifactId>
			<version>1.3.0</version>
		</dependency>

		<!-- webdriver-substeps will also include substeps-core as a dependency -->
		<dependency>
			<groupId>org.substeps</groupId>
			<artifactId>webdriver-substeps</artifactId>
			<version>${webdriver.substeps.version}</version>

			<exclusions>
				<exclusion>
					<groupId>org.substeps</groupId>
					<artifactId>substeps-core</artifactId>
				</exclusion>

				<exclusion>
					<groupId>org.substeps</groupId>
					<artifactId>substeps-core-api</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>org.seleniumhq.selenium</groupId>
			<artifactId>selenium-java</artifactId>
			<version>${selenium.version}</version>
		</dependency>

		<dependency>
			<groupId>org.substeps</groupId>
			<artifactId>substeps-junit-runner</artifactId>
			<version>${substeps.framework.version}</version>
		</dependency>

		<dependency>
			<groupId>org.substeps</groupId>
			<artifactId>substeps-core</artifactId>
			<version>${substeps.framework.version}</version>
		</dependency>

		<dependency>
			<groupId>org.substeps</groupId>
			<artifactId>substeps-core-api</artifactId>
			<version>${substeps.framework.version}</version>
		</dependency>


		<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-log4j12</artifactId>
				<version>${slf4j.version}</version>
			</dependency>

	</dependencies>

	<profiles>

		<!-- In this example, the running of the acceptance tests is defined within 
			a profile, during the integration-test phase of the maven build.
			See the substeps-runner documentation for more details. -->

		<profile>
			<id>acceptance-tests</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<build>
				<plugins>
					<plugin>

						<groupId>org.substeps</groupId>
						<artifactId>substeps-maven-plugin</artifactId>
						<version>${substeps.framework.version}</version>

						<executions>
							<execution>
								<id>Substeps Test</id>
								<phase>integration-test</phase>
								<goals>
									<goal>run-features</goal>
								</goals>
							</execution>

							<execution>
								<id>Build SubSteps Report</id>
								<phase>verify</phase>
								<goals>
									<goal>build-report</goal>
								</goals>
							</execution>

						</executions>

						<configuration>
							<runTestsInForkedVM>true</runTestsInForkedVM>
							<executionConfigs>

								<!-- One or more 'execution configurations', use multiple configs for different test initialisation, phases of project, etc -->

								<executionConfig>
									<dataOutputDirectory>${project.build.directory}/substeps_data</dataOutputDirectory>
									<description>Self Test Features</description> <!-- This appears at the root of the results report -->

									<tags>@all</tags>  <!-- optional - If the feature or scenario has this tag, then it will be 
										included, otherwise it won't -->
									<nonFatalTags>@all</nonFatalTags>
									<fastFailParseErrors>false</fastFailParseErrors> <!-- optional - if true any parse errors will fail the build immediately, 
										rather than attempting to execute as much as possible and fail those tests 
										that can't be parsed -->
									<featureFile>${basedir}/target/test-classes/features</featureFile> <!-- path to the feature file, or directory containing the feature files -->
									<subStepsFileName>${basedir}/target/test-classes/substeps</subStepsFileName> <!-- path to directory of substep files, or a single substep file -->


									<!-- List of classes containing step implementations -->
									<stepImplementationClassNames>
										<param>com.technophobia.webdriver.substeps.impl.BaseWebdriverSubStepImplementations</param>
										<param>com.technophobia.webdriver.substeps.example.ExampleCustomWebdriverStepImplementations</param>
									</stepImplementationClassNames>

									<executionListeners>
										<!--	<param>com.technophobia.substeps.runner.logger.AnsiColourExecutionLogger</param> -->
										<param>com.technophobia.substeps.runner.logger.StepExecutionLogger</param>
									</executionListeners>

									<!-- Ordered list of classes containing additional setup and tear down methods -->
									<initialisationClass>
										<param>com.technophobia.webdriver.substeps.example.ExampleSetupAndTearDown</param>
									</initialisationClass>
								</executionConfig>
							</executionConfigs>

							<!-- Default HTML report builder -->

							<executionReportBuilder implementation="com.technophobia.substeps.report.DefaultExecutionReportBuilder">
								<outputDirectory>${project.build.directory}</outputDirectory>
								<reportTitle>Example Substeps Report - ${project.version}</reportTitle>
							</executionReportBuilder>

							<executionResultsCollector implementation="org.substeps.report.ExecutionResultsCollector">
								<dataDir>${project.build.directory}/substeps_data</dataDir>
								<pretty>true</pretty>
							</executionResultsCollector>

							<reportBuilder implementation="org.substeps.report.ReportBuilder">
								<reportDir>${project.build.directory}/substeps_report</reportDir>
							</reportBuilder>

						</configuration>
						<dependencies>

							<!-- NB. The plugin uses all test dependencies defined in this project, 
								as it's own so there is no need to list separately. The exception is an slf4j 
								logging implementation, which is required before other dependencies have 
								been added. This logger is included as an example, it can be replaced with 
								another slf4j logger of your choice. -->

							<dependency>
								<groupId>org.slf4j</groupId>
								<artifactId>slf4j-log4j12</artifactId>
								<version>${slf4j.version}</version>
							</dependency>

						</dependencies>
					</plugin>
				</plugins>
			</build>
		</profile>


		<profile>
			<id>generate-glossary</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<build>
				<plugins>

					<plugin>
						<groupId>org.substeps</groupId>
						<artifactId>substeps-glossary-builder</artifactId>
						<version>${substeps.framework.version}</version>

						<executions>
							<execution>
								<id>Build SubSteps Glossary</id>
								<phase> process-test-resources</phase>
								<goals>
									<goal>generate-docs</goal>
								</goals>
							</execution>
						</executions>

						<configuration>
							<stepImplementationClassNames>
								<param>com.technophobia.webdriver.substeps.impl.AssertionWebDriverSubStepImplementations</param>
								<param>com.technophobia.webdriver.substeps.impl.ActionWebDriverSubStepImplementations</param>

								<param>com.technophobia.webdriver.substeps.impl.FinderWebDriverSubStepImplementations</param>
								<param>com.technophobia.webdriver.substeps.impl.FormWebDriverSubStepImplementations</param>
								<param>com.technophobia.webdriver.substeps.impl.StartupWebDriverSubStepImplementations</param>
								<param>com.technophobia.webdriver.substeps.impl.TableSubStepImplementations</param>
							</stepImplementationClassNames>

							<!-- Other publishers include :
							MarkdownSubstepsPublisher - for use in README's, wiki's etc
							JsonSubstepsPublisher - the json version should be embedded in any substeps libraries you wish to distribute -->

							<glossaryPublisher implementation="com.technophobia.substeps.glossary.HTMLSubstepsPublisher">
								<outputFile>${basedir}/target/stepimplementations.html</outputFile>
							</glossaryPublisher>

						</configuration>

					</plugin>
				</plugins>
			</build>
		</profile>



	</profiles>

	<!-- this section may be unnecessary depending on your maven configuration -->
	<build>
		<finalName>${project.artifactId}</finalName>
		<plugins>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
					<encoding>${project.build.sourceEncoding}</encoding>
				</configuration>
			</plugin>
		</plugins>
	</build>

</project>
